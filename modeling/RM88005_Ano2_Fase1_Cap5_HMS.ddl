-- Generated by Oracle SQL Developer Data Modeler 21.4.1.349.1605
--   at:        2022-03-13 16:37:11 BRT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE rl_tt_pnl (
    tb_tt_snh_id_tt_snh   INTEGER NOT NULL,
    tb_pnl_snh_id_pnl_snh INTEGER NOT NULL
);

ALTER TABLE rl_tt_pnl ADD CONSTRAINT rl_tt_pnl_pk PRIMARY KEY ( tb_tt_snh_id_tt_snh,
                                                                tb_pnl_snh_id_pnl_snh );

CREATE TABLE tb_exm (
    id_exm                  INTEGER NOT NULL,
    ds_exm                  VARCHAR2(255) NOT NULL,
    ds_tipo_exm             VARCHAR2(100) NOT NULL,
    ds_regiao_exm           VARCHAR2(100) NOT NULL,
    tb_exm_real_id_exm_real INTEGER NOT NULL
);

COMMENT ON COLUMN tb_exm.id_exm IS
    'identificador do exame';

COMMENT ON COLUMN tb_exm.ds_exm IS
    'descricao do exame';

COMMENT ON COLUMN tb_exm.ds_tipo_exm IS
    'descricao do tipo de exame';

COMMENT ON COLUMN tb_exm.ds_regiao_exm IS
    'descricao da regiao do exame realizado';

COMMENT ON COLUMN tb_exm.tb_exm_real_id_exm_real IS
    'identificador do exame realizado';

ALTER TABLE tb_exm ADD CONSTRAINT tb_exm_pk PRIMARY KEY ( id_exm );

CREATE TABLE tb_exm_real (
    id_exm_real         INTEGER NOT NULL,
    dt_exm_real         DATE NOT NULL,
    dc_exm_real         BLOB NOT NULL,
    tb_pct_id_pct       INTEGER NOT NULL,
    tb_medico_id_medico INTEGER NOT NULL
);

COMMENT ON COLUMN tb_exm_real.id_exm_real IS
    'identificador do exame realizado';

COMMENT ON COLUMN tb_exm_real.dt_exm_real IS
    'data do exame realizado';

COMMENT ON COLUMN tb_exm_real.dc_exm_real IS
    'documento do exame realizado';

COMMENT ON COLUMN tb_exm_real.tb_pct_id_pct IS
    'identificador do paciente';

COMMENT ON COLUMN tb_exm_real.tb_medico_id_medico IS
    'identificador do medico';

ALTER TABLE tb_exm_real ADD CONSTRAINT tb_exm_real_pk PRIMARY KEY ( id_exm_real );

CREATE TABLE tb_laudo (
    id_laudo                INTEGER NOT NULL,
    dt_laudo                DATE NOT NULL,
    dc_laudo                BLOB,
    tb_medico_id_medico     INTEGER NOT NULL,
    tb_exm_real_id_exm_real INTEGER NOT NULL
);

COMMENT ON COLUMN tb_laudo.id_laudo IS
    'identificador do laudo';

COMMENT ON COLUMN tb_laudo.dt_laudo IS
    'data de realizacao do laudo';

COMMENT ON COLUMN tb_laudo.dc_laudo IS
    'documento do laudo do exame';

COMMENT ON COLUMN tb_laudo.tb_medico_id_medico IS
    'identificador do medico';

COMMENT ON COLUMN tb_laudo.tb_exm_real_id_exm_real IS
    'identificador do exame realizado';

ALTER TABLE tb_laudo ADD CONSTRAINT tb_laudo_pk PRIMARY KEY ( id_laudo );

CREATE TABLE tb_mdt (
    id_mdt        INTEGER NOT NULL,
    nm_mdt        VARCHAR2(255) NOT NULL,
    dt_validade   DATE NOT NULL,
    tb_prc_id_prc INTEGER NOT NULL
);

COMMENT ON COLUMN tb_mdt.id_mdt IS
    'identificador do medicamento';

COMMENT ON COLUMN tb_mdt.nm_mdt IS
    'nome do medicamento';

COMMENT ON COLUMN tb_mdt.dt_validade IS
    'data de validade do medicamento';

COMMENT ON COLUMN tb_mdt.tb_prc_id_prc IS
    'identificador da prescricao';

ALTER TABLE tb_mdt ADD CONSTRAINT tb_mdt_pk PRIMARY KEY ( id_mdt );

CREATE TABLE tb_medico (
    id_medico        INTEGER NOT NULL,
    nm_medico        VARCHAR2(150) NOT NULL,
    dt_nasc          DATE NOT NULL,
    nr_cpf           NUMBER(11) NOT NULL,
    nr_crm           VARCHAR2(20) NOT NULL,
    ds_uf_crm        VARCHAR2(2) NOT NULL,
    ds_especialidade VARCHAR2(150),
    tb_pct_id_pct    INTEGER NOT NULL
);

COMMENT ON COLUMN tb_medico.id_medico IS
    'identificador do medico';

COMMENT ON COLUMN tb_medico.nm_medico IS
    'nome do medico';

COMMENT ON COLUMN tb_medico.dt_nasc IS
    'data de nascimento do medico';

COMMENT ON COLUMN tb_medico.nr_cpf IS
    'numero do cpf do medico';

COMMENT ON COLUMN tb_medico.nr_crm IS
    'numero do crm do medico';

COMMENT ON COLUMN tb_medico.ds_uf_crm IS
    'uf do estado crm do medico';

COMMENT ON COLUMN tb_medico.ds_especialidade IS
    'descricao da especialidade do medico';

ALTER TABLE tb_medico ADD CONSTRAINT tb_medico_pk PRIMARY KEY ( id_medico );

CREATE TABLE tb_pct (
    id_pct        INTEGER NOT NULL,
    nm_pct        VARCHAR2(150) NOT NULL,
    dt_nasc       DATE NOT NULL,
    nr_cpf        NUMBER(11) NOT NULL,
    dt_cadastro   DATE NOT NULL,
    dt_admissao   DATE,
    ds_prioridade VARCHAR2(50)
);

COMMENT ON COLUMN tb_pct.id_pct IS
    'identificador do paciente';

COMMENT ON COLUMN tb_pct.nm_pct IS
    'nome do paciente';

COMMENT ON COLUMN tb_pct.dt_nasc IS
    'data de nascimento do paciente';

COMMENT ON COLUMN tb_pct.nr_cpf IS
    'numero de cpd do paciente';

COMMENT ON COLUMN tb_pct.dt_cadastro IS
    'data de cadastro do paciente na unidade';

COMMENT ON COLUMN tb_pct.dt_admissao IS
    'data de admissao do paciente na unidade';

COMMENT ON COLUMN tb_pct.ds_prioridade IS
    'descricao da prioridade do paciente';

ALTER TABLE tb_pct ADD CONSTRAINT tb_pct_pk PRIMARY KEY ( id_pct );

CREATE TABLE tb_pnl_snh (
    id_pnl_snh          INTEGER NOT NULL,
    ds_painel           VARCHAR2(80) NOT NULL,
    dt_chamada_snh      DATE NOT NULL,
    tb_medico_id_medico INTEGER NOT NULL
);

COMMENT ON COLUMN tb_pnl_snh.id_pnl_snh IS
    'identificador do painel de chamada de senhas';

COMMENT ON COLUMN tb_pnl_snh.ds_painel IS
    'descricao do painel de chamada de senhas';

COMMENT ON COLUMN tb_pnl_snh.dt_chamada_snh IS
    'data da chamada da senha no painel';

COMMENT ON COLUMN tb_pnl_snh.tb_medico_id_medico IS
    'identificador do medico';

ALTER TABLE tb_pnl_snh ADD CONSTRAINT tb_pnl_snh_pk PRIMARY KEY ( id_pnl_snh );

CREATE TABLE tb_prc (
    id_prc              INTEGER NOT NULL,
    dt_prc              DATE NOT NULL,
    ds_via              VARCHAR2(50) NOT NULL,
    ds_dose             VARCHAR2(50),
    ob_observacao       VARCHAR2(255),
    tb_medico_id_medico INTEGER NOT NULL,
    tb_pct_id_pct       INTEGER NOT NULL
);

COMMENT ON COLUMN tb_prc.id_prc IS
    'identificador da prescricao';

COMMENT ON COLUMN tb_prc.dt_prc IS
    'data da prescricao';

COMMENT ON COLUMN tb_prc.ds_via IS
    'via de administracao do medicamento prescrito';

COMMENT ON COLUMN tb_prc.ds_dose IS
    'dose dos medicamentos prescritos';

COMMENT ON COLUMN tb_prc.ob_observacao IS
    'campo de observacao da prescricao';

CREATE UNIQUE INDEX tb_prc__idx ON
    tb_prc (
        tb_medico_id_medico
    ASC );

CREATE UNIQUE INDEX tb_prc__idxv1 ON
    tb_prc (
        tb_pct_id_pct
    ASC );

ALTER TABLE tb_prc ADD CONSTRAINT tb_prc_pk PRIMARY KEY ( id_prc );

CREATE TABLE tb_tt_snh (
    id_tt_snh       INTEGER NOT NULL,
    ds_tt_snh       VARCHAR2(80) NOT NULL,
    ds_snh          VARCHAR2(50) NOT NULL,
    dt_retirada_snh DATE NOT NULL,
    tb_pct_id_pct   INTEGER NOT NULL,
    tb_und_id_und   INTEGER NOT NULL
);

COMMENT ON COLUMN tb_tt_snh.id_tt_snh IS
    'identificador do totem de retirada de senhas';

COMMENT ON COLUMN tb_tt_snh.ds_tt_snh IS
    'descricao do totem de retirada de senhas';

COMMENT ON COLUMN tb_tt_snh.ds_snh IS
    'descricao da senha';

COMMENT ON COLUMN tb_tt_snh.dt_retirada_snh IS
    'data da retirada da senha no totem';

COMMENT ON COLUMN tb_tt_snh.tb_pct_id_pct IS
    'identificador do paciente';

COMMENT ON COLUMN tb_tt_snh.tb_und_id_und IS
    'identificador da unidade de atendimento';

CREATE UNIQUE INDEX tb_tt_snh__idx ON
    tb_tt_snh (
        tb_pct_id_pct
    ASC );

ALTER TABLE tb_tt_snh ADD CONSTRAINT tb_tt_snh_pk PRIMARY KEY ( id_tt_snh );

CREATE TABLE tb_und (
    id_und      INTEGER NOT NULL,
    nm_und      VARCHAR2(150) NOT NULL,
    nr_cnpj     NUMBER(14) NOT NULL,
    ds_enderco  VARCHAR2(150) NOT NULL,
    nr_numero   VARCHAR2(9) NOT NULL,
    nr_telefone VARCHAR2(11)
);

COMMENT ON COLUMN tb_und.id_und IS
    'identificador da unidade de atendimento';

COMMENT ON COLUMN tb_und.nm_und IS
    'nome da unidade de atendimento';

COMMENT ON COLUMN tb_und.nr_cnpj IS
    'numero de cnpj da unidade de atendimento';

COMMENT ON COLUMN tb_und.ds_enderco IS
    'endereco da unidade de atendimento';

COMMENT ON COLUMN tb_und.nr_numero IS
    'numero do endereco da unidade de atendimento';

COMMENT ON COLUMN tb_und.nr_telefone IS
    'numero de telefone da unidade de atendimento';

ALTER TABLE tb_und ADD CONSTRAINT tb_und_pk PRIMARY KEY ( id_und );

ALTER TABLE rl_tt_pnl
    ADD CONSTRAINT rl_tt_pnl_tb_pnl_snh_fk FOREIGN KEY ( tb_pnl_snh_id_pnl_snh )
        REFERENCES tb_pnl_snh ( id_pnl_snh );

ALTER TABLE rl_tt_pnl
    ADD CONSTRAINT rl_tt_pnl_tb_tt_snh_fk FOREIGN KEY ( tb_tt_snh_id_tt_snh )
        REFERENCES tb_tt_snh ( id_tt_snh );

ALTER TABLE tb_exm_real
    ADD CONSTRAINT tb_exm_real_tb_medico_fk FOREIGN KEY ( tb_medico_id_medico )
        REFERENCES tb_medico ( id_medico );

ALTER TABLE tb_exm_real
    ADD CONSTRAINT tb_exm_real_tb_pct_fk FOREIGN KEY ( tb_pct_id_pct )
        REFERENCES tb_pct ( id_pct );

ALTER TABLE tb_exm
    ADD CONSTRAINT tb_exm_tb_exm_real_fk FOREIGN KEY ( tb_exm_real_id_exm_real )
        REFERENCES tb_exm_real ( id_exm_real );

ALTER TABLE tb_laudo
    ADD CONSTRAINT tb_laudo_tb_exm_real_fk FOREIGN KEY ( tb_exm_real_id_exm_real )
        REFERENCES tb_exm_real ( id_exm_real );

ALTER TABLE tb_laudo
    ADD CONSTRAINT tb_laudo_tb_medico_fk FOREIGN KEY ( tb_medico_id_medico )
        REFERENCES tb_medico ( id_medico );

ALTER TABLE tb_mdt
    ADD CONSTRAINT tb_mdt_tb_prc_fk FOREIGN KEY ( tb_prc_id_prc )
        REFERENCES tb_prc ( id_prc );

ALTER TABLE tb_medico
    ADD CONSTRAINT tb_medico_tb_pct_fk FOREIGN KEY ( tb_pct_id_pct )
        REFERENCES tb_pct ( id_pct );

ALTER TABLE tb_pnl_snh
    ADD CONSTRAINT tb_pnl_snh_tb_medico_fk FOREIGN KEY ( tb_medico_id_medico )
        REFERENCES tb_medico ( id_medico );

ALTER TABLE tb_prc
    ADD CONSTRAINT tb_prc_tb_medico_fk FOREIGN KEY ( tb_medico_id_medico )
        REFERENCES tb_medico ( id_medico );

ALTER TABLE tb_prc
    ADD CONSTRAINT tb_prc_tb_pct_fk FOREIGN KEY ( tb_pct_id_pct )
        REFERENCES tb_pct ( id_pct );

ALTER TABLE tb_tt_snh
    ADD CONSTRAINT tb_tt_snh_tb_pct_fk FOREIGN KEY ( tb_pct_id_pct )
        REFERENCES tb_pct ( id_pct );

ALTER TABLE tb_tt_snh
    ADD CONSTRAINT tb_tt_snh_tb_und_fk FOREIGN KEY ( tb_und_id_und )
        REFERENCES tb_und ( id_und );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             3
-- ALTER TABLE                             25
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
